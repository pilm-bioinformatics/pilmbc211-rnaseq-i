[
{
	"uri": "https://pilm-bioinformatics.github.io/pilmbc211-rnaseq-i/basics/",
	"title": "Basics",
	"tags": [],
	"description": "",
	"content": " Chapter 1 You will find the requirements listed here and useful links to understand what is nextflow.\nSummary  Understand nextflow Understand docker  "
},
{
	"uri": "https://pilm-bioinformatics.github.io/pilmbc211-rnaseq-i/basics/requirements/",
	"title": "Requirements",
	"tags": [],
	"description": "",
	"content": " knowledge  PILMBC 103: https://pilm-bioinformatics.github.io/pilmbc103-remote-storage-and-computing/ What is RNAseq: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2949280/  Software  Docker: https://docs.docker.com/v17.12/install/ nexflow: In the terminal do this:\njava -version This has to return a version \u0026gt; 8 or \u0026gt;1.8\ncurl -s https://get.nextflow.io | bash\n./nextflow run hello\n  "
},
{
	"uri": "https://pilm-bioinformatics.github.io/pilmbc211-rnaseq-i/basics/nextflow/",
	"title": "Nextflow",
	"tags": [],
	"description": "",
	"content": " Nextflow enables scalable and reproducible scientific workflows using software containers. It allows the adaptation of pipelines written in the most common scripting languages.\nDocumentation: https://www.nextflow.io/docs/latest/index.html\nnf-core: repository of pipelines\nExample of workflow #!/usr/bin/env nextflow params.str = 'Hello world!' process splitLetters { output: file 'chunk_*' into letters mode flatten \u0026quot;\u0026quot;\u0026quot; printf '${params.str}' | split -b 6 - chunk_ \u0026quot;\u0026quot;\u0026quot; } process convertToUpper { input: file x from letters output: stdout result \u0026quot;\u0026quot;\u0026quot; cat $x | tr '[a-z]' '[A-Z]' \u0026quot;\u0026quot;\u0026quot; } result.println { it.trim() }  Errors Nextflow is the most user-friendly workflow to find out why something is not working.\nIn a case of an error, you will see RED text with the error that the tool produced.\nAt the end, it will show the working directory, something like this:\n/om/user/lpantano/test-pilm211/work/1a/2556d7bc7ff6773c41d37968e13f5f\nIn that folder you will find the most important files:\n .command.sh: the command that produced the error .command.our/err/log: information related to the error  This is an example of an error due to a file is corrupted:\nSUMMARISING RUN PARAMETERS ========================== Input filename: SRR9166086_D5_1.fastq.gz Trimming mode: paired-end Trim Galore version: 0.6.1 Cutadapt version: 2.3 Number of cores used for trimming: 1 Quality Phred score cutoff: 20 Quality encoding type selected: ASCII+33 Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected) Maximum trimming error rate: 0.1 (default) Minimum required adapter overlap (stringency): 1 bp Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp Running FastQC on the data once trimming has completed Output file(s) will be GZIP compressed Writing final adapter and quality trimmed output to SRR9166086_D5_1_trimmed.fq.gz \u0026gt;\u0026gt;\u0026gt; Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file SRR9166086_D5_1.fastq.gz \u0026lt;\u0026lt;\u0026lt; 10000000 sequences processed This is cutadapt 2.3 with Python 3.6.7 Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA SRR9166086_D5_1.fastq.gz Processing reads on 1 core in single-end mode ... cutadapt: error: Error in FASTQ file at line 64953264: Length of sequence and qualities differ Cutadapt terminated with exit signal: '256'. Terminating Trim Galore run, please check error message(s) to get an idea what went wrong... Work dir: /om/user/lpantano/test-pilm211/work/1a/2556d7bc7ff6773c41d37968e13f5f Tip: you can try to figure out what's wrong by changing to the process work dir and showing the script file named `.command.sh` -- Check '.nextflow.log' file for details  A way to reproduce the error is to run yourself the command is giving an issue:\ncd /om/user/lpantano/test-pilm211/work/1a/2556d7bc7ff6773c41d37968e13f5f bash .command.sh  If you run any of our pipelines or nf-core pipelines and you find an error, please submit an issue first here: https://github.mit.edu/PILM-bioinformatics/support/issues\n"
},
{
	"uri": "https://pilm-bioinformatics.github.io/pilmbc211-rnaseq-i/nextflow-rnaseq/",
	"title": "nextflow-rnaseq",
	"tags": [],
	"description": "",
	"content": " Chapter 2 You will learn to run a test data in your local computer.\nThe test data contains:\nInputs:\n 4 files from SCerevisiae genome FASTA genes GTF metadata (Optional)  Outputs:\n QC metrics and expression files execution report execution timeline  Summary  Run a test pipeline within a docker container Run a test pipeline in Open Mind  "
},
{
	"uri": "https://pilm-bioinformatics.github.io/pilmbc211-rnaseq-i/nextflow-rnaseq/pipeline/",
	"title": "RNAseq pipeline",
	"tags": [],
	"description": "",
	"content": "  Documentation: https://pilm-bioinformatics.github.io/pipelines-nf-rnaseq/ Public dataset browser: https://ewels.github.io/sra-explorer/#  Scheme Pipeline Overview: https://pilm-bioinformatics.github.io/pipelines-nf-rnaseq/output.html\nLogging Important parameters Some parameters that have an important impact to the computer resources requirements and time execution.\n --pseudo_aligner salmon: to run best practices for gene/transcript quantification --singleEnd: in case of not being paired dataset --aligner hisat2: to reduce the resources during alignment (if salmon is on) --skipGenebodyCoverage: long process that gives the same information than Qualimap --skipDupRadar: long process that gives similar information than Qualimap --skipPreseq: long process that gives similar information than Qualimap --skipRseQC: long process that gives similar information than Qualimap  All parameters are defined at nextflow.config\nReports  output explanation execution_timeline.html execution_report.html results_description.html software_versions.csv  "
},
{
	"uri": "https://pilm-bioinformatics.github.io/pilmbc211-rnaseq-i/nextflow-rnaseq/test/",
	"title": "RNAseq test",
	"tags": [],
	"description": "",
	"content": "  This needs to have Docker and Nextflow installed   Start docker app and open the terminal\n docker pull nfcore/rnaseq:dev this will download the software container\n nextflow run pilm-bioinformatics/pipelines-nf-rnaseq -profile docker,test this run the pipeline with the software container we have defined previously and the test data defined by the pipeline.\n  Container definition What software container to use is defined inside nextflow.config in the variable: process.container = 'nfcore/rnaseq:dev'.\n Nextflow will download by itself the software container if it is not installed.  "
},
{
	"uri": "https://pilm-bioinformatics.github.io/pilmbc211-rnaseq-i/nextflow-rnaseq/openmind/",
	"title": "RNAseq in Open Mind",
	"tags": [],
	"description": "",
	"content": "  This needs to have an account in OpenMind   Open the terminal\n ssh username@openmind7.mit.edu\n cd /om/user/username\n mkdir rnaseq-pilm211\n cd rnaseq-pilm211\n ls /om/group/pilm/test_data/mouse\n cp /om2/group/pilm/master-scripts/pipelines-nf-rnaseq/* . and cp /om2/group/pilm/master-scripts/config/om-profile.config .\n vim om-job.slurm\n  modify the line to look like this: (remove the # character to uncomment the line and it actually runs)\n#!/bin/bash #SBATCH -N 1 #SBATCH -c 1 #SBATCH --mem=4000 #SBATCH -t 0-23:00:00 #SBATCH -J \u0026quot;rnaseq\u0026quot; #SBATCH -e job.e #SBATCH -o job.o ## SBATCH --mail-type=END,FAIL # this line is commented ## SBATCH --mail-user=user@mit.edu # this line is commented export PATH=/om2/group/pilm/conda3/envs/nf-core-rnaseq-1.4dev/bin:$PATH export PATH=/om2/group/pilm/bin:$PATH if [ ! -f \u0026quot;om-profile.config\u0026quot; ] ; then cp /om2/group/pilm/master-scripts/config/om-profile.config . fi if [ ! -f \u0026quot;om-rnaseq\u0026quot; ] ; then cp /om2/group/pilm/master-scripts/pipelines-nf-rnaseq/om-rnaseq.config . fi ## Example pipeline GENOME=/om/group/pilm/genomes/Mmusculus/GRCm38.96/GRCm38.96.config #GENOME=/om/group/pilm/genomes/Mmusculus/GRCh38.96/GRCh38.96.config # Add --singleEnd if true nextflow run /om2/group/pilm/pipelines/dev/pipelines-nf-rnaseq -c om-profile.config -c om-rnaseq.config -c $GENOME --reads \u0026quot;/om/group/pilm/test_data/mouse/*_{1,2}.fastq.gz\u0026quot; -resume  Default parameters The PILM pipeline runs under some default parameters in the following files.\nGeneral om-profile.config\nexecutor { queueSize=24 } process { // Global process config executor = 'slurm' // queue = '' cpus = 6 // clusterOptions = { \u0026quot;--qos=\u0026quot; } }   queueSize is the number of jobs running at the same time. cpus the number of cores by default to use by process  RNAseq om-rnaseq.config\nparams { igenomes_base = '/om/group/pilm/genomes' skipRseQC = true skipGenebodyCoverage = true skipPreseq = true skipDupRadar = true aligner = 'hisat2' pseudo_aligner = 'salmon' }  "
},
{
	"uri": "https://pilm-bioinformatics.github.io/pilmbc211-rnaseq-i/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pilm-bioinformatics.github.io/pilmbc211-rnaseq-i/credits/",
	"title": "Credits",
	"tags": [],
	"description": "",
	"content": " Content  Lorena Pantano - Picower Institute Judith Flo - Harvard Engineering School  Theme Contributors Thanks to them  for making Open Source Software a better place !\n.ghContributors{ display:flex; flex-flow: wrap; align-content: flex-start }\n.ghContributors \u0026gt; div{ width: 50% ; display: inline-flex; margin-bottom: 5px; } .ghContributors \u0026gt; div label{ padding-left: 4px ; } .ghContributors \u0026gt; div span{ font-size: x-small; padding-left: 4px ; }\n  @matcornic 152 commits \n @matalo33 37 commits \n @lierdakil 16 commits \n @coliff 13 commits \n @gwleclerc 13 commits \n @mdavids 10 commits \n @ozobi 5 commits \n @Xipas 5 commits \n @pdelaby 4 commits \n @Chris-Greaves 3 commits \n @mreithub 3 commits \n @massimeddu 3 commits \n @willwade 3 commits \n @denisvm 2 commits \n @gpospelov 2 commits \n @tanzaho 2 commits \n @wikijm 2 commits \n @lfalin 2 commits \n @alexvargasbenamburg 1 commits \n @afs2015 1 commits \n @arifpedia 1 commits \n @berryp 1 commits \n @MrMoio 1 commits \n @ChrisLasar 1 commits \n @giuliov 1 commits \n @haitch 1 commits \n @ImgBotApp 1 commits \n @RealOrangeOne 1 commits \n @JohnBlood 1 commits \n @kamilchm 1 commits \n @lloydbenson 1 commits \n @sykesm 1 commits \n @nvasudevan 1 commits \n @654wak654 1 commits \n @PierreAdam 1 commits \n @ripienaar 1 commits \n @EnigmaCurry 1 commits \n @taiidani 1 commits \n @exKAZUu 1 commits \n @shelane 1 commits \n @tedyoung 1 commits \n @Thiht 1 commits \n @editicalu 1 commits \n @fossabot 1 commits \n @kamar535 1 commits \n @nonumeros 1 commits \n @pgorod 1 commits \n @proelbtn 1 commits \n\nAnd a special thanks to @vjeantet for his work on docdock, a fork of hugo-theme-learn. v2.0.0 of this theme is inspired by his work.\nPackages and libraries  mermaid - generation of diagram and flowchart from text in a similar manner as markdown font awesome - the iconic font and CSS framework jQuery - The Write Less, Do More, JavaScript Library lunr - Lunr enables you to provide a great search experience without the need for external, server-side, search services\u0026hellip; horsey - Progressive and customizable autocomplete component clipboard.js - copy text to clipboard highlight.js - Javascript syntax highlighter modernizr - A JavaScript toolkit that allows web developers to use new CSS3 and HTML5 features while maintaining a fine level of control over browsers that don\u0026rsquo;t support  Tooling  Netlify - Continuous deployement and hosting of this documentation Hugo  "
},
{
	"uri": "https://pilm-bioinformatics.github.io/pilmbc211-rnaseq-i/",
	"title": "PILMBC211",
	"tags": [],
	"description": "",
	"content": " Requirements knowledge  PILMBC 103: https://pilm-bioinformatics.github.io/pilmbc103-remote-storage-and-computing/ What is RNAseq: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2949280/  Software  Docker: https://docs.docker.com/v17.12/install/ nexflow: In the terminal do this:\njava -version This has to return a version \u0026gt; 8 or \u0026gt;1.8\ncurl -s https://get.nextflow.io | bash\n./nextflow run hello\n  Agenda  1:30-1:55 Introduction to vim hands-on: modify files in the terminal (mandatory if you don\u0026rsquo;t know this) 2:00-2:25 Best practices for RNAseq analysis lecture 2:30-3:50 Running an example in the local computer hands-on 3:00-3:30 Running an example in OpenMind cluster hands-on: you need to be part of the cluster, contact your representative:  millerlab : Jefferson Roy surlab: Ming Hu tsailab: Lorena Pantano    You are welcome to stay during the whole session even if you don\u0026rsquo;t want/can\u0026rsquo;t to follow the hands-on materials.\nGoal  Best practices on choosing the right tool How to process FASTQ files from RNAseq experiments Run a test data analysis in your computer or/and the Open Mind cluster  Angels If you see you can help others during the workshop, please do, it will improve the dynamic.\nContributors Happy to accept corrections at: https://github.com/pilm-bioinformatics/pilmbc211-rnaseq-i\n"
},
{
	"uri": "https://pilm-bioinformatics.github.io/pilmbc211-rnaseq-i/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]